{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { useCommonCartEffect } from '../../effects/cartEffects';\nimport { post } from '../../utils/request';\nconst useMakeOrderEffect = (shopId, shopName, productList) => {\n  const router = useRouter();\n  const store = useStore();\n  const handleConfirmOrder = async isCanceled => {\n    const products = [];\n    for (const i in productList.value) {\n      const product = productList.value[i];\n      products.push({\n        id: parseInt(product._id, 10),\n        num: product.count\n      });\n    }\n    try {\n      const result = await post('/api/order', {\n        addressId: 1,\n        shopId,\n        shopName: shopName.value,\n        isCanceled,\n        products\n      });\n      console.log(result);\n      if (result?.errno === 0) {\n        store.commit('clearCartData', shopId);\n        router.push({\n          name: 'OrderList'\n        });\n      }\n    } catch (e) {}\n  };\n  return {\n    handleConfirmOrder\n  };\n};\nconst useShowMaskEffect = () => {\n  const showConfirm = ref(false);\n};\nexport default {\n  name: 'Order',\n  setup() {\n    const rotate = useRoute();\n    const shopId = parseInt(rotate.params.id, 10);\n    const {\n      calculations,\n      shopName,\n      productList\n    } = useCommonCartEffect(shopId);\n    const {\n      handleConfirmOrder\n    } = useMakeOrderEffect(shopId, shopName, productList);\n    return {\n      calculations,\n      handleConfirmOrder,\n      showConfirm,\n      handleSubmitClick\n    };\n  }\n};","map":{"version":3,"names":["ref","useRoute","useRouter","useStore","useCommonCartEffect","post","useMakeOrderEffect","shopId","shopName","productList","router","store","handleConfirmOrder","isCanceled","products","i","value","product","push","id","parseInt","_id","num","count","result","addressId","console","log","errno","commit","name","e","useShowMaskEffect","showConfirm","setup","rotate","params","calculations","handleSubmitClick"],"sources":["D:\\Besktop\\jingdong\\src\\views\\orderConfirmation\\Order.vue"],"sourcesContent":["<template>\r\n    <div class=\"order\">\r\n        <div class=\"order_price\">实付金额 <b>{{ calculations.price }}</b></div>\r\n        <div class=\"order_btn\">提交订单</div>\r\n    </div>\r\n    <div class=\"mask\">\r\n        <div class=\"mask_content\">\r\n            <h3 class=\"mask_content_title\">确认离开收银台吗？</h3>\r\n            <p class=\"mask_content_desc\">请尽快完成支付，否则将被取消！</p>\r\n            <div class=\"mask_content_btns\">\r\n                <div class=\"mask_content_btn mask_content_btn--first\"\r\n                @click=\"() => handleConfirmOrder(true)\"\r\n                >取消订单</div>\r\n                <div class=\"mask_content_btn mask_content_btn--last\"\r\n                @click=\"() => handleConfirmOrder(false)\"\r\n                >确认支付</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport { useCommonCartEffect } from '../../effects/cartEffects'\r\nimport { post } from '../../utils/request'\r\n\r\nconst useMakeOrderEffect = (shopId, shopName, productList) => {\r\n  const router = useRouter()\r\n  const store = useStore()\r\n  const handleConfirmOrder = async (isCanceled) => {\r\n    const products = []\r\n    for (const i in productList.value) {\r\n      const product = productList.value[i]\r\n      products.push({ id: parseInt(product._id, 10), num: product.count })\r\n    }\r\n    try {\r\n      const result = await post('/api/order', {\r\n        addressId: 1,\r\n        shopId,\r\n        shopName: shopName.value,\r\n        isCanceled,\r\n        products\r\n      })\r\n      console.log(result)\r\n      if (result?.errno === 0) {\r\n        store.commit('clearCartData', shopId)\r\n        router.push({ name: 'OrderList' })\r\n      }\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n  return { handleConfirmOrder }\r\n}\r\n\r\nconst useShowMaskEffect = () => {\r\n  const showConfirm = ref(false)\r\n}\r\n\r\nexport default {\r\n  name: 'Order',\r\n  setup () {\r\n    const rotate = useRoute()\r\n\r\n    const shopId = parseInt(rotate.params.id, 10)\r\n    const { calculations, shopName, productList } = useCommonCartEffect(shopId)\r\n    const { handleConfirmOrder } = useMakeOrderEffect(shopId, shopName, productList)\r\n\r\n\r\n    return {\r\n      calculations,\r\n      handleConfirmOrder,\r\n      showConfirm,\r\n      handleSubmitClick\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../style/viriables';\r\n@import '../../style/mixins.scss';\r\n.order {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    height: 49px;\r\n    line-height: 49px;\r\n    background: $bg_color;\r\n    &_price {\r\n        flex: 1;\r\n        text-indent: 24px;\r\n        font-size: 14px;\r\n        color: $content-fontcolor;\r\n    }\r\n    &_btn {\r\n        width: 98px;\r\n        background: #4fb0f9;\r\n        color: $bg_color;\r\n        text-align: center;\r\n        font-size: 42px;\r\n    }\r\n}\r\n.mask {\r\n    z-index: 1;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    background: rgba(0, 0, 0, 0.50);\r\n    &_content {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        width: 300px;\r\n        height: 156px;\r\n        background: #fff;\r\n        text-align: center;\r\n        border-radius: 4px;\r\n        &_title {\r\n            margin: 24px 0 0 0;\r\n            line-height: 26px;\r\n            font-size: 18px;\r\n            color: #333;\r\n        }\r\n        &_desc {\r\n            margin: 8px 0 0 0;\r\n            font-size: 14px;\r\n            color: #666;\r\n        }\r\n        &_btns {\r\n            display: flex;\r\n            margin: 24px 58px;\r\n        }\r\n        &_btn {\r\n            flex: 1;\r\n            width: 80px;\r\n            line-height: 32px;\r\n            border-radius: 16px;\r\n            font-size: 14px;\r\n            &--first {\r\n                margin-right: 12px;\r\n                border: 1px solid #4fb0f9;\r\n                color: #4fb0f9;\r\n            }\r\n            &--last {\r\n                margin-left: 12px;\r\n                background: #4fb0f9;\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"],"mappings":";AAsBA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAW;AAC/C,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,mBAAkB,QAAS,2BAA0B;AAC9D,SAASC,IAAG,QAAS,qBAAoB;AAEzC,MAAMC,kBAAiB,GAAIA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,KAAK;EAC5D,MAAMC,MAAK,GAAIR,SAAS,CAAC;EACzB,MAAMS,KAAI,GAAIR,QAAQ,CAAC;EACvB,MAAMS,kBAAiB,GAAI,MAAOC,UAAU,IAAK;IAC/C,MAAMC,QAAO,GAAI,EAAC;IAClB,KAAK,MAAMC,CAAA,IAAKN,WAAW,CAACO,KAAK,EAAE;MACjC,MAAMC,OAAM,GAAIR,WAAW,CAACO,KAAK,CAACD,CAAC;MACnCD,QAAQ,CAACI,IAAI,CAAC;QAAEC,EAAE,EAAEC,QAAQ,CAACH,OAAO,CAACI,GAAG,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAEL,OAAO,CAACM;MAAM,CAAC;IACrE;IACA,IAAI;MACF,MAAMC,MAAK,GAAI,MAAMnB,IAAI,CAAC,YAAY,EAAE;QACtCoB,SAAS,EAAE,CAAC;QACZlB,MAAM;QACNC,QAAQ,EAAEA,QAAQ,CAACQ,KAAK;QACxBH,UAAU;QACVC;MACF,CAAC;MACDY,OAAO,CAACC,GAAG,CAACH,MAAM;MAClB,IAAIA,MAAM,EAAEI,KAAI,KAAM,CAAC,EAAE;QACvBjB,KAAK,CAACkB,MAAM,CAAC,eAAe,EAAEtB,MAAM;QACpCG,MAAM,CAACQ,IAAI,CAAC;UAAEY,IAAI,EAAE;QAAY,CAAC;MACnC;IACF,EAAE,OAAOC,CAAC,EAAE,CAEZ;EACF;EACA,OAAO;IAAEnB;EAAmB;AAC9B;AAEA,MAAMoB,iBAAgB,GAAIA,CAAA,KAAM;EAC9B,MAAMC,WAAU,GAAIjC,GAAG,CAAC,KAAK;AAC/B;AAEA,eAAe;EACb8B,IAAI,EAAE,OAAO;EACbI,KAAIA,CAAA,EAAK;IACP,MAAMC,MAAK,GAAIlC,QAAQ,CAAC;IAExB,MAAMM,MAAK,GAAIa,QAAQ,CAACe,MAAM,CAACC,MAAM,CAACjB,EAAE,EAAE,EAAE;IAC5C,MAAM;MAAEkB,YAAY;MAAE7B,QAAQ;MAAEC;IAAY,IAAIL,mBAAmB,CAACG,MAAM;IAC1E,MAAM;MAAEK;IAAmB,IAAIN,kBAAkB,CAACC,MAAM,EAAEC,QAAQ,EAAEC,WAAW;IAG/E,OAAO;MACL4B,YAAY;MACZzB,kBAAkB;MAClBqB,WAAW;MACXK;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}